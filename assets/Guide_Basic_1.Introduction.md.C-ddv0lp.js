import{_ as e,p as t,n as s,O as r}from"./chunks/framework.ZbD7-4CG.js";const P=JSON.parse('{"title":"欢迎使用 VitePress-Helper","description":"","frontmatter":{},"headers":[],"relativePath":"Guide/Basic/1.Introduction.md","filePath":"Guide/Basic/1.Introduction.md","lastUpdated":1709888786000}'),a={name:"Guide/Basic/1.Introduction.md"},i=r('<h1 id="欢迎使用-vitepress-helper" tabindex="-1">欢迎使用 VitePress-Helper <a class="header-anchor" href="#欢迎使用-vitepress-helper" aria-label="Permalink to &quot;欢迎使用 VitePress-Helper&quot;">​</a></h1><h2 id="为什么要做这个工具" tabindex="-1">为什么要做这个工具 <a class="header-anchor" href="#为什么要做这个工具" aria-label="Permalink to &quot;为什么要做这个工具&quot;">​</a></h2><p>VitePress 是一个很好用的静态文档构建工具。但使用了一段时间后，感觉在使用体验上还是存在些许优化空间。</p><p>VitePress 默认的 <code>导航栏</code> 和 <code>侧边栏</code> 配置比较繁琐，而且配置文件和源码文件是分离的，需要手动同步。在管理的内容数量比较少的情况下，还问题不大，一旦内容数量比较多的话，会增加很多维护成本。</p><p>另一方面，作为 VitePress 使用者，可能会有不止一个 VitePress 项目，如果每个项目都配置一遍，也是比较麻烦的。</p><p>在发现问题后，检索了关于 VitePress 的插件，可以看出有不少人有相同的感受。 尝试了部分插件，并没有很好的解决问题或者说大家关注的细节有所出入。</p><p>所以最终决定写一个工具，让自己使用起来更加便利，同时也希望能够帮助大家更轻松地使用 VitePress。</p>',7),o=[i];function c(n,d,p,_,l,h){return s(),t("div",null,o)}const V=e(a,[["render",c]]);export{P as __pageData,V as default};
