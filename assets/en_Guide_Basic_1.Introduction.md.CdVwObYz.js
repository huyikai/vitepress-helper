import{_ as e,p as t,n as o,O as a}from"./chunks/framework.ZbD7-4CG.js";const f=JSON.parse('{"title":"Welcome to VitePress-Helper","description":"","frontmatter":{},"headers":[],"relativePath":"en/Guide/Basic/1.Introduction.md","filePath":"en/Guide/Basic/1.Introduction.md","lastUpdated":1709888786000}'),r={name:"en/Guide/Basic/1.Introduction.md"},s=a('<h1 id="welcome-to-vitepress-helper" tabindex="-1">Welcome to VitePress-Helper <a class="header-anchor" href="#welcome-to-vitepress-helper" aria-label="Permalink to &quot;Welcome to VitePress-Helper&quot;">​</a></h1><h2 id="why-create-this-tool" tabindex="-1">Why create this tool <a class="header-anchor" href="#why-create-this-tool" aria-label="Permalink to &quot;Why create this tool&quot;">​</a></h2><p>VitePress is a very useful static document building tool. However, after using it for a while, I feel that there is still some room for improvement in terms of user experience.</p><p>The default <code>navigation bar</code> and <code>sidebar</code> configurations of VitePress are quite cumbersome, and the configuration files are separate from the source code files, requiring manual synchronization. This is not a big problem when managing a small amount of content, but it becomes a significant maintenance cost when there is a large amount of content.</p><p>On the other hand, as a VitePress user, there may be more than one VitePress project. It is quite troublesome to configure each project separately.</p><p>After discovering this issue, I searched for VitePress plugins and found that many people have the same feeling. I tried some plugins, but none of them solved the problem well or addressed the details that everyone is concerned about.</p><p>Therefore, I finally decided to write a tool to make it more convenient for myself to use, and also hope to help everyone use VitePress more easily.</p>',7),i=[s];function n(c,l,d,h,m,u){return o(),t("div",null,i)}const _=e(r,[["render",n]]);export{f as __pageData,_ as default};
